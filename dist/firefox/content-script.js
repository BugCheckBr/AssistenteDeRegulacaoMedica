(()=>{"use strict";const e=1,r=2,o=3,t=4,n=5,s="extension_lifecycle",i="content_script",a="csp_violation",c=["cpf","rg","cns","cartao_sus","nome","nome_completo","nome_mae","nome_pai","data_nascimento","idade","sexo","genero","endereco","rua","numero","bairro","cidade","cep","telefone","celular","email","diagnostico","cid","procedimento","medicamento","dosagem","tratamento","senha","password","token_acesso"],l=["id","uuid","reguId","reguIdp","reguIds","isenPK","isenFullPKCrypto","sessionId","requestId","transactionId","correlationId"];class g{constructor(){this.config=(()=>{let o=!1;try{o="undefined"!=typeof chrome&&chrome.runtime&&chrome.runtime.getManifest&&chrome.runtime.getManifest().version.includes("dev")}catch{o=!1}return{minLevel:o?e:r,enableConsoleLogging:!0,enableErrorStorage:!0,maxStoredErrors:100,enableStackTraces:o,enablePerformanceTiming:!0}})(),this.errorObservers=[],this.performanceMarks=new Map,this.initializeErrorStorage(),this.setupGlobalErrorHandling()}async initializeErrorStorage(){if(this.config.enableErrorStorage)try{const e="undefined"!=typeof browser?browser:chrome;(await e.storage.local.get("medicalErrors")).medicalErrors||await e.storage.local.set({medicalErrors:[]})}catch(e){}}setupGlobalErrorHandling(){"undefined"!=typeof window&&(window.addEventListener("error",e=>{this.logError("Erro JavaScript não tratado",{message:e.message,filename:this.sanitizeFilename(e.filename),lineno:e.lineno,colno:e.colno},s)}),window.addEventListener("unhandledrejection",e=>{var r;this.logError("Promise rejeitada não tratada",{reason:(null===(r=e.reason)||void 0===r?void 0:r.message)||"Unknown error"},s)})),"undefined"!=typeof document&&document.addEventListener("securitypolicyviolation",e=>{this.logError("Violação de CSP detectada",{directive:e.violatedDirective,blockedURI:e.blockedURI,disposition:e.disposition},a)})}sanitizeForLogging(e,r="MEDICAL_DATA"){if(null==e)return e;if("object"!=typeof e)return"string"==typeof e&&e.length>100?`${e.substring(0,100)}...`:e;if(Array.isArray(e))return e.length>5?[...e.slice(0,5).map(e=>this.sanitizeForLogging(e,r)),`...${e.length-5} more items`]:e.map(e=>this.sanitizeForLogging(e,r));const o={};for(const[t,n]of Object.entries(e))this.isSensitiveField(t)?o[t]="[SANITIZED_MEDICAL_DATA]":l.includes(t)?o[t]=n:o[t]="object"==typeof n&&null!==n?this.sanitizeForLogging(n,r):n;return o}isSensitiveField(e){const r=e.toLowerCase();return c.some(e=>r.includes(e.toLowerCase()))}sanitizeFilename(e){if(!e)return"unknown";const r=e.split(/[/\\]/);return r[r.length-1]||"unknown"}logInfo(e,o=null,t=s){this.log(r,e,o,t)}logWarning(e,r=null,t=s){this.log(o,e,r,t)}logError(e,r=null,o=s){this.log(t,e,r,o)}logFatal(e,r=null,o=s){this.log(n,e,r,o)}logDebug(r,o=null,t=s){this.log(e,r,o,t)}log(e,r,o=null,n=s){if(e<this.config.minLevel)return;const i=o?this.sanitizeForLogging(o):null,a={timestamp:(new Date).toISOString(),level:this.getLevelName(e),category:n,message:r,data:i,userAgent:"undefined"!=typeof navigator?navigator.userAgent:"Unknown",extensionVersion:this.getExtensionVersion()};this.config.enableStackTraces&&e>=t&&(a.stack=(new Error).stack),this.config.enableConsoleLogging&&this.outputToConsole(e,a),this.config.enableErrorStorage&&e>=t&&this.storeError(a),this.notifyObservers(a)}outputToConsole(e,r){r.category,r.message}async storeError(e){try{const r="undefined"!=typeof browser?browser:chrome;let o=(await r.storage.local.get("medicalErrors")).medicalErrors||[];o.unshift(e),o.length>this.config.maxStoredErrors&&(o=o.slice(0,this.config.maxStoredErrors)),await r.storage.local.set({medicalErrors:o})}catch(r){}}notifyObservers(e){this.errorObservers.forEach(r=>{try{r(e)}catch(o){}})}subscribe(e){this.errorObservers.push(e)}unsubscribe(e){const r=this.errorObservers.indexOf(e);r>-1&&this.errorObservers.splice(r,1)}startPerformanceMark(e){this.config.enablePerformanceTiming&&this.performanceMarks.set(e,Date.now())}endPerformanceMark(e,r=s){if(!this.config.enablePerformanceTiming)return;const o=this.performanceMarks.get(e);if(o){const t=Date.now()-o;this.logInfo(`Performance: ${e} took ${t}ms`,{duration:t},r),this.performanceMarks.delete(e)}}getLevelName(e){return["TRACE","DEBUG","INFO","WARN","ERROR","FATAL"][e]||"UNKNOWN"}getExtensionVersion(){try{return"undefined"!=typeof chrome&&chrome.runtime?chrome.runtime.getManifest().version:"unknown"}catch{return"unknown"}}async getStoredErrors(){try{const e="undefined"!=typeof browser?browser:chrome;return(await e.storage.local.get("medicalErrors")).medicalErrors||[]}catch(e){return this.logWarning("Falha ao recuperar errors armazenados",{error:e.message}),[]}}async clearStoredErrors(){try{const e="undefined"!=typeof browser?browser:chrome;await e.storage.local.set({medicalErrors:[]}),this.logInfo("Errors armazenados limpos")}catch(e){this.logWarning("Falha ao limpar errors armazenados",{error:e.message})}}}let d=null;const u=(d||(d=new g),d),m=(e,r,o)=>u.logInfo(e,r,o);!function(){m("Script de controle v16 (Detecção com Broker) ativo",{},i);const e=browser;let r=null;const o=()=>{const o=document.getElementById("tabs-manutencao");if(o&&"true"===o.getAttribute("aria-expanded")){const o=document.querySelector("#regu\\.reguPK\\.idp"),c=document.querySelector("#regu\\.reguPK\\.ids");if(o&&c&&o.value){const l=o.value,g=c.value,d=`${l}-${g}`;if(d!==r){r=d;const o={reguIdp:l,reguIds:g};m("Dados de regulação detectados na página SIGSS",{hasPayload:!!o,pageUrl:document.location.pathname,payloadKeys:o?Object.keys(o):[]},i);try{e.runtime.sendMessage({type:"SAVE_REGULATION_DATA",payload:o}),m("Mensagem enviada para background script com sucesso",{messageType:"SAVE_REGULATION_DATA"},i)}catch(a){t="Falha ao enviar mensagem para background script",n={errorMessage:a.message},s=i,u.logError(t,n,s)}}}}else r=null;var t,n,s},t=new MutationObserver(()=>{clearTimeout(t.debounceTimeout),t.debounceTimeout=setTimeout(o,250)});t.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["style","aria-expanded","class"]})}()})();