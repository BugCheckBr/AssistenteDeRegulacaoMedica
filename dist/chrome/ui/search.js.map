{"version":3,"file":"ui/search.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAGA;AAEA;AAEA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AEhDA;AACA;AACA;AACA;AACA","sources":["webpack://assistente-de-regulacao-medica/./ui/search.js","webpack://assistente-de-regulacao-medica/webpack/bootstrap","webpack://assistente-de-regulacao-medica/webpack/runtime/chunk loaded","webpack://assistente-de-regulacao-medica/webpack/runtime/define property getters","webpack://assistente-de-regulacao-medica/webpack/runtime/hasOwnProperty shorthand","webpack://assistente-de-regulacao-medica/webpack/runtime/make namespace object","webpack://assistente-de-regulacao-medica/webpack/runtime/jsonp chunk loading","webpack://assistente-de-regulacao-medica/webpack/before-startup","webpack://assistente-de-regulacao-medica/webpack/startup","webpack://assistente-de-regulacao-medica/webpack/after-startup"],"sourcesContent":["/**\r\n * @file Módulo para gerir a funcionalidade de busca de pacientes.\r\n */\r\nimport * as API from '../api.js';\r\nimport { store } from '../store.js';\r\nimport * as Utils from '../utils.js';\r\n\r\nlet searchInput;\r\nlet searchResultsList;\r\nlet recentPatientsList;\r\nlet onSelectPatient; // Callback para notificar o sidebar sobre a seleção\r\n\r\nfunction renderSearchResults(patients) {\r\n  if (!searchResultsList) return;\r\n  if (patients.length === 0) {\r\n    searchResultsList.innerHTML =\r\n      '<li class=\"px-4 py-3 text-sm text-slate-500\">Nenhum paciente encontrado.</li>';\r\n    return;\r\n  }\r\n  searchResultsList.innerHTML = patients\r\n    .map(\r\n      (p) =>\r\n        `<li class=\"px-4 py-3 border-b border-slate-100 hover:bg-slate-50 cursor-pointer transition\" data-idp=\"${\r\n          p.idp\r\n        }\" data-ids=\"${p.ids}\">${renderPatientListItem(p)}</li>`\r\n    )\r\n    .join('');\r\n}\r\n\r\n/**\r\n * Renderiza a lista de pacientes recentes a partir do store.\r\n */\r\nfunction renderRecentPatients() {\r\n  if (!recentPatientsList) return;\r\n  const recents = store.getRecentPatients() || [];\r\n  recentPatientsList.innerHTML =\r\n    '<li class=\"px-4 pt-3 pb-1 text-xs font-semibold text-slate-400\">PACIENTES RECENTES</li>' +\r\n    (recents.length === 0\r\n      ? '<li class=\"px-4 py-3 text-sm text-slate-500\">Nenhum paciente recente.</li>'\r\n      : recents\r\n          .map((p) => {\r\n            // CORREÇÃO: Lida com a estrutura de dados antiga e nova dos pacientes recentes.\r\n            const fichaData = p.ficha || p; // Se p.ficha não existe, 'p' é o próprio objeto da ficha.\r\n            const idp = fichaData.isenPK?.idp || fichaData.idp;\r\n            const ids = fichaData.isenPK?.ids || fichaData.ids;\r\n\r\n            if (!idp || !ids) return ''; // Pula a renderização se o item estiver malformado.\r\n\r\n            return `<li class=\"px-4 py-3 border-b border-slate-100 hover:bg-slate-50 cursor-pointer transition recent-patient-item\" data-idp=\"${idp}\" data-ids=\"${ids}\">${renderPatientListItem(\r\n              fichaData\r\n            )}</li>`;\r\n          })\r\n          .join(''));\r\n}\r\n\r\nfunction renderPatientListItem(patient) {\r\n  const nome =\r\n    patient.value ||\r\n    Utils.getNestedValue(patient, 'entidadeFisica.entidade.entiNome') ||\r\n    'Nome não informado';\r\n  const idp = patient.idp || patient.isenPK?.idp;\r\n  const ids = patient.ids || patient.isenPK?.ids;\r\n  const dataNascimento =\r\n    patient.dataNascimento || Utils.getNestedValue(patient, 'entidadeFisica.entfDtNasc');\r\n  const cpf = patient.cpf || Utils.getNestedValue(patient, 'entidadeFisica.entfCPF');\r\n  const cns = patient.cns || patient.isenNumCadSus;\r\n  return `\r\n      <div class=\"font-medium text-slate-800\">${nome}</div>\r\n      <div class=\"grid grid-cols-2 gap-x-4 text-xs text-slate-500 mt-1\">\r\n        <span><strong class=\"font-semibold\">Cód:</strong> ${idp}-${ids}</span>\r\n        <span><strong class=\"font-semibold\">Nasc:</strong> ${dataNascimento || '-'}</span>\r\n        <span><strong class=\"font-semibold\">CPF:</strong> ${cpf || '-'}</span>\r\n        <span><strong class=\"font-semibold\">CNS:</strong> ${cns || '-'}</span>\r\n      </div>\r\n    `;\r\n}\r\n\r\nconst handleSearchInput = Utils.debounce(async () => {\r\n  const searchTerm = searchInput.value.trim();\r\n  store.clearPatient();\r\n  recentPatientsList.classList.add('hidden');\r\n  searchResultsList.classList.remove('hidden');\r\n  if (searchTerm.length < 1) {\r\n    searchResultsList.innerHTML = '';\r\n    return;\r\n  }\r\n  Utils.toggleLoader(true);\r\n  try {\r\n    const patients = await API.searchPatients(searchTerm);\r\n    renderSearchResults(patients);\r\n  } catch {\r\n    Utils.showMessage('Erro ao buscar pacientes.');\r\n  } finally {\r\n    Utils.toggleLoader(false);\r\n  }\r\n}, 500);\r\n\r\nfunction handleSearchFocus() {\r\n  if (searchInput.value.length > 0) return;\r\n  renderRecentPatients();\r\n  searchResultsList.classList.add('hidden');\r\n  recentPatientsList.classList.remove('hidden');\r\n}\r\n\r\nfunction handleSearchBlur() {\r\n  setTimeout(() => {\r\n    searchResultsList.classList.add('hidden');\r\n    recentPatientsList.classList.add('hidden');\r\n  }, 200);\r\n}\r\n\r\nasync function handleResultClick(event) {\r\n  const listItem = event.target.closest('li[data-idp]');\r\n  if (!listItem) return;\r\n\r\n  const { idp, ids } = listItem.dataset;\r\n\r\n  if (listItem.classList.contains('recent-patient-item')) {\r\n    const recentPatient = store.getRecentPatients().find((p) => {\r\n      // CORREÇÃO: Lida com a estrutura de dados antiga e nova.\r\n      const patientIdp = p.ficha ? p.ficha.isenPK.idp : p.idp;\r\n      return patientIdp == idp;\r\n    });\r\n\r\n    // Se o paciente foi encontrado e tem a nova estrutura (com cache), usa os dados do cache.\r\n    if (recentPatient && recentPatient.ficha) {\r\n      store.setPatient(recentPatient.ficha, recentPatient.cadsus);\r\n      searchInput.value = '';\r\n      searchResultsList.classList.add('hidden');\r\n      recentPatientsList.classList.add('hidden');\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Para pacientes novos ou pacientes recentes com a estrutura antiga (que precisam ser re-buscados).\r\n  if (onSelectPatient) {\r\n    onSelectPatient({ idp, ids });\r\n  }\r\n\r\n  searchInput.value = '';\r\n  searchResultsList.classList.add('hidden');\r\n  recentPatientsList.classList.add('hidden');\r\n}\r\n\r\nexport function init(config) {\r\n  searchInput = document.getElementById('patient-search-input');\r\n  searchResultsList = document.getElementById('search-results');\r\n  recentPatientsList = document.getElementById('recent-patients-list');\r\n  onSelectPatient = config.onSelectPatient;\r\n\r\n  store.subscribe(() => {\r\n    if (!recentPatientsList.classList.contains('hidden')) {\r\n      renderRecentPatients();\r\n    }\r\n  });\r\n\r\n  searchInput.addEventListener('input', handleSearchInput);\r\n  searchInput.addEventListener('focus', handleSearchFocus);\r\n  searchInput.addEventListener('blur', handleSearchBlur);\r\n  searchResultsList.addEventListener('click', handleResultClick);\r\n  recentPatientsList.addEventListener('click', handleResultClick);\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"ui/search\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkassistente_de_regulacao_medica\"] = self[\"webpackChunkassistente_de_regulacao_medica\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"common\"], () => (__webpack_require__(\"./ui/search.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}