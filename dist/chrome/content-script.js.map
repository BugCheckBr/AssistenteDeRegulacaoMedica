{"version":3,"file":"content-script.js","mappings":";;AAAA;AACA;AACA;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://assistente-de-regulacao-medica/webpack/bootstrap","webpack://assistente-de-regulacao-medica/webpack/runtime/make namespace object","webpack://assistente-de-regulacao-medica/./content-script.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @file Content Script para a extensão Assistente de Regulação (v16 - Detecção com Broker).\r\n * Este script observa a abertura da aba de manutenção e envia os IDs para o background script,\r\n * que atua como um intermediário para salvar os dados no storage.session.\r\n */\r\n\r\n(function () {\r\n  console.log('[Assistente de Regulação] Script de controle v16 (Detecção com Broker) ativo.');\r\n\r\n  const api = browser;\r\n  let lastProcessedReguId = null;\r\n\r\n  const checkMaintenanceTab = () => {\r\n    const maintenanceTabPanel = document.getElementById('tabs-manutencao');\r\n    const isActive =\r\n      maintenanceTabPanel && maintenanceTabPanel.getAttribute('aria-expanded') === 'true';\r\n\r\n    if (isActive) {\r\n      const idpElement = document.querySelector('#regu\\\\.reguPK\\\\.idp');\r\n      const idsElement = document.querySelector('#regu\\\\.reguPK\\\\.ids');\r\n\r\n      if (idpElement && idsElement && idpElement.value) {\r\n        const reguIdp = idpElement.value;\r\n        const reguIds = idsElement.value;\r\n        const currentReguId = `${reguIdp}-${reguIds}`;\r\n\r\n        if (currentReguId !== lastProcessedReguId) {\r\n          lastProcessedReguId = currentReguId;\r\n          const payload = { reguIdp, reguIds };\r\n\r\n          console.log(\r\n            '[Assistente] Aba Manutenção aberta. Enviando IDs para o background script:',\r\n            payload\r\n          );\r\n\r\n          // Envia a mensagem para o background script, que tem acesso ao storage.session\r\n          try {\r\n            api.runtime.sendMessage({ type: 'SAVE_REGULATION_DATA', payload });\r\n          } catch (e) {\r\n            console.error('[Assistente] Falha ao enviar mensagem para o background script:', e);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      lastProcessedReguId = null;\r\n    }\r\n  };\r\n\r\n  const observer = new MutationObserver(() => {\r\n    clearTimeout(observer.debounceTimeout);\r\n    observer.debounceTimeout = setTimeout(checkMaintenanceTab, 250);\r\n  });\r\n\r\n  observer.observe(document.body, {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true,\r\n    attributeFilter: ['style', 'aria-expanded', 'class'],\r\n  });\r\n})();\r\n"],"names":[],"sourceRoot":""}